name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Continuous Integration (CI)
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Build & test backend
        working-directory: ./backendV1
        run: |
          mvn clean install -DskipTests -DskipDocker

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Build frontend
        working-directory: ./my-react-app
        run: |
          npm install
          npm run build

  # Continuous Deployment (CD)
  deploy:
    name: Deploy to Minikube
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Set up Minikube
        uses: manusa/actions-setup-minikube@v2
        with:
          kubernetes-version: '1.25.0'
          driver: docker

      - name: Point Docker to Minikube
        run: |
          echo "Configuring Docker to use Minikube's daemon..."
          eval $(minikube -p minikube docker-env)

      - name: Build Docker images in Minikube
        run: |
          # Tag and build backend image matching deployment manifest
          docker build -t silamin00/via-tabloid-application-backend:latest ./backendV1
          # Tag and build frontend image matching deployment manifest
          docker build -t silamin00/via-tabloid-application-frontend:latest ./my-react-app

      - name: Deploy to Kubernetes
        run: |
          # Apply PersistentVolumeClaim and all Deployments
          kubectl apply -f k8s/deployment.yaml
          # Apply Services
          kubectl apply -f k8s/service.yaml

      - name: Verify rollout
        run: |
          kubectl rollout status deployment/viatab-postgres
          kubectl rollout status deployment/viatab-backend
          kubectl rollout status deployment/viatab-frontend
